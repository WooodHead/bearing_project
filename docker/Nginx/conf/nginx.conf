user  nginx;
worker_processes  1;

# error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;
    # access_log syslog:server=192.168.4.1:5149,facility=local7,tag=nginx,severity=info combined;

    sendfile        on;
    # tcp_nopush     on;

    keepalive_timeout  65;

    # gzip  on;

    #    upstream upstream_frontend {
    #        ip_hash;
    #        # 常见负载均衡机制：
    #        # (1)round-robin; # 轮询分配(缺省值)
    #        # (2)ip_hash;     # 访问者IP地址的哈希值，可保证同一客户端落在同一服务器上
    #        # (3)least_conn;  # 最少连接
    #        # (4)fair;        # 响应时间短的优先分配
    #        server 192.168.4.1:8150;
    #        server 192.168.4.1:8250;
    #        server 192.168.4.1:8350;
    #    }

    upstream upstream_backend {
        ip_hash;
        # 常见负载均衡机制：
        # (1)round-robin; # 轮询分配(缺省值)
        # (2)ip_hash;     # 访问者IP地址的哈希值，可保证同一客户端落在同一服务器上
        # (3)least_conn;  # 最少连接
        # (4)fair;        # 响应时间短的优先分配
        server 192.168.4.1:8160;
        server 192.168.4.1:8260;
        server 192.168.4.1:8360;
    }

    include /etc/nginx/conf.d/*.conf;
}
